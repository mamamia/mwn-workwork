---
- hosts: workstation
  connection: local

  roles:
    - define_system

# Global
- hosts: workstation
  connection: local
  tasks:
    # Create facts `detected_shell` and `shellrc_dir`
    - name: detect shell
      action: detect_shell
      changed_when: false

    # Ensure ww is immediately accessible
    - name: ensure ww is executable
      file:
        path: "{{ bin_dir }}/ww"
        mode: 0755

    - name: ensure ww is accessible
      become: yes
      file:
        src: "{{ bin_dir }}/ww"
        dest: /usr/local/bin/ww
        state: link

# OS X
- hosts: sys_Darwin
  connection: local
  gather_facts: false
  roles:
    - workstation_darwin_tasks

# Linux
- hosts: sys_Linux
  connection: local
  gather_facts: false
  roles:
    - workstation_linux_tasks

# Global
- hosts: workstation
  connection: local
  tasks:
    - name: ensure workwork group exists
      become: yes
      group:
        name: workwork
        state: present

    - name: disable sudo password for workwork group
      become: yes
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "Disable password prompt for workwork group"
        line: "%workwork ALL=(ALL) NOPASSWD:ALL # Disable password prompt for workwork group"
        validate: "visudo -cf %s"

    # This task broke OSX, and removed other important groups, such as admin!
    # Bug reported here: https://github.com/ansible/ansible-modules-core/issues/2322
    # Bash alternatives written below instead
    # - name: add workwork group to current user
    #   become: yes
    #   user:
    #     name: "{{ ansible_user_id }}"
    #     groups: workwork
    #     append: yes

    - name: add workwork group to current user (OS X)
      become: yes
      shell: "dseditgroup -o edit -a {{ ansible_user_id }} -t user workwork"
      changed_when: false
      when: ansible_system == "Darwin"

    - name: add workwork group to current user (Linux)
      become: yes
      shell: "usermod -a -G workwork {{ ansible_user_id }}"
      when: ansible_system == "Linux"

    - name: install composer
      shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/tmp
      args:
        creates: /usr/local/bin/composer

    - name: rename composer.phar to composer
      become: yes
      shell: mv /tmp/composer.phar /usr/local/bin/composer
      args:
        creates: /usr/local/bin/composer

    - name: make composer executable
      become: yes
      file:
        path: /usr/local/bin/composer
        mode: 0755
        state: file

    - name: install wp-cli
      become: yes
      shell: curl --output /usr/local/bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      args:
        creates: /usr/local/bin/wp

    - name: make wp-cli executable
      become: yes
      file:
        path: /usr/local/bin/wp
        mode: 0755
        state: file

    - name: install sass
      become: yes
      gem:
        name: sass
        state: present
        user_install: no

    - name: install pip
      become: yes
      easy_install:
        name: pip
        # state: latest <-- ansible v2 only

    - name: install mysql-python # for adding db with Ansible
      become: yes
      pip:
        name: MySQL-python
        state: present

    - name: install docker-py # for running docker with ansible
      become: yes
      pip:
        name: docker-py
        version: 1.6.0
