---
- hosts: workstation

  vars:
    bin_dir: "{{ ansible_env.HOME }}/workspace/mwn-workwork/bin"

  tasks:
    - name: Detect shell
      action: detect_shell # This returns the varibles `detected_shell` and `shellrc_dir`
      changed_when: false

    - name: Add WorkWork bin to PATH in .bashrc or .zshrc
      lineinfile:
        dest: "{{ shellrc_dir }}"
        regexp: "MWN WorkWork bin path"
        line: "export PATH=$PATH:{{ bin_dir }} # MWN WorkWork bin path (added with install.yml)"
        create: yes
        state: present

    - name: Add WorkWork bin to PATH in .bash_profile
      lineinfile:
        dest: "{{ ansible_env.HOME }}/.bash_profile"
        regexp: "MWN WorkWork bin path"
        line: "export PATH=$PATH:{{ bin_dir }} # MWN WorkWork bin path (added with install.yml)"
        create: yes
        state: present
      when: detected_shell == "bash"

    - name: Add execute to files in WorkWork bin
      file:
        path: "{{ bin_dir }}"
        mode: u+rwx,g+rx,o+rx
        recurse: yes

    - name: Add boot2docker shellinit .bashrc or .zshrc
      lineinfile:
        dest: "{{ shellrc_dir }}"
        regexp: "MWN WorkWork boot2docker"
        line: "if [ $(type -P boot2docker) ]; then $(boot2docker shellinit 2>/dev/null); fi # MWN WorkWork boot2docker (added with install.yml)"
        create: yes
        state: present
      when: ansible_distribution == "MacOSX"

    - name: Add boot2docker shellinit .bash_profile
      lineinfile:
        dest: "{{ ansible_env.HOME }}/.bash_profile"
        regexp: "MWN WorkWork boot2docker"
        line: "if [ $(type -P boot2docker) ]; then $(boot2docker shellinit 2>/dev/null); fi # MWN WorkWork boot2docker (added with install.yml)"
        create: yes
        state: present
      when: ansible_distribution == "MacOSX" and detected_shell == "bash"
