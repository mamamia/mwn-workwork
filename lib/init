#!/bin/bash

check_clone() {
  save_cursor; display_status_secondary "INFO" "[ Cloning mwn-${SITE_NAME}... ]"
  if [ ! -d "${SITE_DIR}" ]; then
    git clone --quiet git@mamamia.git.beanstalkapp.com:/mamamia/mwn-${SITE_NAME}.git ${SITE_DIR}
  fi
  replace_line; display_status_secondary "PASS" "Directory for mwn-${SITE_NAME} exists"
}

post_clone() {
  save_cursor; display_status_secondary "INFO" "[ Running composer install... ]"
  cd ${SITE_DIR}/bedrock && composer install --quiet --no-interaction --no-dev
  replace_line; display_status_secondary "PASS" "Finished composer install"

  save_cursor; display_status_secondary "INFO" "[ Running npm install... ]"
  cd ${SITE_DIR}/bedrock && npm install --silent > /dev/null
  replace_line; display_status_secondary "PASS" "Finished npm install"
}

init_boot2docker() {
  if [ $PLATFORM == "osx" ]; then
    save_cursor; display_status_secondary "INFO" "[ Starting boot2docker... ]"
    boot2docker init &>/dev/null
    boot2docker up &>/dev/null
    # Reset the shell to export new docker envvars into our shell
    source $PROFILE
    replace_line; display_status_secondary "PASS" "Started boot2docker"
  fi
}

update_etchosts() {
  save_cursor; display_status_secondary "INFO" "[ Updating etc/hosts... ]"
  # Web and database will likely need to be updated as new sites are wrapped in
  sudo ${WW_DIR}/bin/etchosts update web $(boot2docker ip) &>/dev/null
  sudo ${WW_DIR}/bin/etchosts update database $(boot2docker ip) &>/dev/null
  sudo ${WW_DIR}/bin/etchosts update www.${SITE_NAME}.dev $(boot2docker ip) &>/dev/null
  replace_line; display_status_secondary "PASS" "Updated etc/hosts"
}
