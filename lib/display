#!/bin/bash

# Output fancy titles
print_status_primary() {
  STATUS=$1
  MESSAGE=$2
  PRIMARY_COLOUR="COLOUR"_"${STATUS}"
  echo -e "${!PRIMARY_COLOUR}"
  echo "${MESSAGE}"
  echo "--------------------------------------------------------"
  echo -e "${COLOUR_RESET}"
}

# Output status messages
print_status_secondary() {
  STATUS=$1
  MESSAGE=$2
  SECONDARY_COLOUR="COLOUR"_"${STATUS}"
  SECONDARY_SYMBOL="SYMBOL"_"${STATUS}"
  echo -e "${!SECONDARY_COLOUR}${!SECONDARY_SYMBOL}${COLOUR_RESET} ${MESSAGE}"
  if [ $STATUS == "ERROR" ]; then
    exit 1
  fi
}

# Output shared version
print_version() {
  echo "mwn-workwork ${VER_LOCAL}"
  exit 1
}

# Output shared arguments
print_usage() {
  echo "Usage: ww [argument]"
  echo "   or: ww [command] [site]"
  echo
}

print_arguments() {
  echo "Arguments:"
  echo "   --update     Run git pull for WorkWork"
  echo "   --provision  Run ansible playbook that provisions workstation"
  echo "   --version    Print git HEAD hash for WorkWork"
  echo "   --help       Print this help message"
  echo "   --shutdown   Stop and remove all docker containers"
  echo
}

print_commands() {
  echo "Commands:"
  echo "   init         Initialise local development environment for [site]"
  echo "   start        Start local development environment for [site]"
  echo "   stop         Stop local development environment for [site]"
  echo "   update       Run git pull and composer update for [site]"
  echo "   updatedb     Overwrite local database with current production tables"
  echo
}

print_sites() {
  echo "Sites:"
  echo "   dd           Debrief Daily"
  echo "   mm           Mamamia"
  echo "   tg           The Glow"
  echo "   tm           The Motherish"
}

print_help() {
  print_usage
  print_arguments
  print_commands
  print_sites
  echo
  exit 1
}
